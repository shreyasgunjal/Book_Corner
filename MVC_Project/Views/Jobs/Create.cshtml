@model MVC_Project.Models.Job

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<!-- Bootstrap alert for messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Job</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group mb-3">
        @Html.LabelFor(model => model.job_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.job_id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.job_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.job_desc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.job_desc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.job_desc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.min_lvl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.min_lvl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.min_lvl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.max_lvl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.max_lvl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.max_lvl, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--Buttons section-->

    <div class="form-group mb-3">
        <div class="d-flex justify-content-between">

            @*<div class="col-md-offset-2 col-md-10">*@
            <!--Create Button-->
            <input type="submit" value="Create" class="btn btn-success btn-lg px-3" />
        </div>
        </div>
    </div>
}

<div>
    <!-- Back to List Button -->
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary btn-lg px-3" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Redirect to Index page when alert is closed
        var successAlert = document.getElementById('successAlert');
        if (successAlert) {
            successAlert.addEventListener('closed.bs.alert', function () {
                window.location.href = '@Url.Action("Index", "Jobs")';
            });
        }
    });
    </script>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
