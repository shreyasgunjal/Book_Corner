@model MVC_Project.Models.Title

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<!-- Bootstrap alert for messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.pub_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pub_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pub_id, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <label for="pub_id" class="col-sm-3 control-label">@Html.DisplayNameFor(model => model.pub_id)</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.pub_id, new { @class = "form-control", id = "pub_id" })
                <span id="pubIdError" class="text-danger" style="display:none;">Only 1389, 0736, 0877 are allowed.</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.advance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.advance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.advance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.royalty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.royalty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.royalty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ytd_sales, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ytd_sales, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ytd_sales, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.pubdate, new { @class = "control-label" })
                @Html.EditorFor(model => model.pubdate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.pubdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Buttons section -->
        <div class="form-group mb-3">
            <div class="d-flex justify-content-between">
                <!-- Create Button -->
                <input type="submit" value="Create" class="btn btn-success btn-lg px-5" />

                <!-- Back to List Button -->
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary btn-lg px-5" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Redirect to Index page when alert is closed
            var successAlert = document.getElementById('successAlert');
            if (successAlert) {
                successAlert.addEventListener('closed.bs.alert', function () {
                    window.location.href = '@Url.Action("Index", "TitleMVC")';
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#pub_id").on("input", function () {
                // Get the value the user is typing
                var inputValue = $(this).val();
                // Allowed pub_ids
                var allowedPubIds = ["1389", "0736", "0877"];

                // Check if the value is in the allowed pub_ids
                if (allowedPubIds.includes(inputValue)) {
                    // Hide the error message if valid
                    $("#pubIdError").hide();
                } else {
                    // Show the error message if not valid
                    $("#pubIdError").show();
                }
            });
        });
    </script>
}
